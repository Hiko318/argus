version: '3.8'

services:
  foresight-dev:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    ports:
      - "8004:8004"
      - "3000:3000"
    volumes:
      - ../src:/app/src
      - ../configs:/app/configs
      - ../data:/app/data
      - ../models:/app/models
      - ../ui:/app/ui
    environment:
      - SAR_SERVICE_PORT=8004
      - ENABLE_GPU=false
      - DETECTION_CONFIDENCE_THRESHOLD=0.5
      - GEOLOCATION_PRECISION=high
    networks:
      - foresight-network
    restart: unless-stopped

  foresight-gpu:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    ports:
      - "8005:8004"
    volumes:
      - ../src:/app/src
      - ../configs:/app/configs
      - ../data:/app/data
      - ../models:/app/models
    environment:
      - SAR_SERVICE_PORT=8004
      - ENABLE_GPU=true
      - DETECTION_CONFIDENCE_THRESHOLD=0.5
      - GEOLOCATION_PRECISION=high
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - foresight-network
    restart: unless-stopped
    profiles:
      - gpu

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - foresight-network
    restart: unless-stopped
    profiles:
      - cache

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../ui:/usr/share/nginx/html:ro
    depends_on:
      - foresight-dev
    networks:
      - foresight-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis-data:

networks:
  foresight-network:
    driver: bridge