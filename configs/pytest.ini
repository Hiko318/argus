[tool:pytest]
# Pytest configuration for Foresight SAR System

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Minimum version
minversion = 6.0

# Add current directory to Python path
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --durations=10
    --maxfail=5
    -ra

# Test markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    acceptance: End-to-end acceptance tests
    performance: Performance and benchmark tests
    security: Security and vulnerability tests
    slow: Tests that take a long time to run
    gpu: Tests that require GPU acceleration
    network: Tests that require network connectivity
    docker: Tests that require Docker
    jetson: Tests specific to NVIDIA Jetson devices
    windows: Tests specific to Windows platform
    linux: Tests specific to Linux platform
    vault: Tests that require HashiCorp Vault
    camera: Tests that require camera hardware
    simulation: Tests using simulated data
    real_data: Tests using real sensor data
    privacy: Tests related to privacy features
    evidence: Tests for evidence packaging
    reid: Tests for re-identification features
    tracking: Tests for object tracking
    geolocation: Tests for geolocation features
    ui: Tests for user interface components
    api: Tests for API endpoints
    database: Tests that require database
    models: Tests for machine learning models
    deployment: Tests for deployment and installation

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    error::FutureWarning

# Test timeout (in seconds)
timeout = 300

# Parallel execution
# Uncomment to enable parallel test execution
# addopts = -n auto

# JUnit XML output for CI
junit_family = xunit2
junit_logging = all
junit_log_passing_tests = true

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml