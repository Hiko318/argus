# SAR-Optimized YOLOv8 Training Configuration
# Comprehensive configuration for Search and Rescue operations with enhanced metrics tracking

# Model configuration - Using YOLOv11 for maximum accuracy
model: yolo11x.pt  # YOLOv11 Extra Large for highest accuracy

# Dataset configuration
data: 'data/training/sar_dataset.yaml'

# Class definitions optimized for Human, Dog, Cat detection
nc: 3  # number of classes
names:
  0: person
  1: dog
  2: cat

# Training hyperparameters (optimized for maximum confidence 100%)
hyp:
  # Learning rate settings for maximum accuracy
  lr0: 0.001         # very low initial learning rate for precision
  lrf: 0.0001        # extremely low final learning rate for fine-tuning
  momentum: 0.95     # higher momentum for stability
  weight_decay: 0.001   # higher weight decay for better generalization
  warmup_epochs: 10.0   # longer warmup for maximum stability
  warmup_momentum: 0.9  # higher warmup momentum
  warmup_bias_lr: 0.05  # lower warmup bias lr for precision
  
  # Loss function weights (optimized for maximum confidence)
  box: 0.1           # higher box loss for precise localization
  cls: 1.0           # maximum cls loss for confident classification
  dfl: 2.5           # higher dfl loss for better distribution
  
  # Data augmentation (enhanced for covered/occluded detection)
  hsv_h: 0.02        # increased HSV-Hue for lighting variations
  hsv_s: 0.8         # increased HSV-Saturation for better contrast
  hsv_v: 0.5         # increased HSV-Value for shadow/lighting conditions
  degrees: 5.0       # small rotation for varied perspectives
  translate: 0.15    # increased translation for partial occlusion simulation
  scale: 0.7         # increased scale variation for size diversity
  shear: 2.0         # small shear for perspective variations
  perspective: 0.0002 # slight perspective changes
  flipud: 0.0        # no vertical flipping for aerial imagery
  fliplr: 0.5        # horizontal flipping
  mosaic: 1.0        # mosaic augmentation for complex scenes
  mixup: 0.15        # mixup for better generalization
  copy_paste: 0.0    # segment copy-paste (probability)

# Training settings (enhanced for better accuracy)
epochs: 100
batch: 16       # Adjust based on GPU memory
imgsz: 1280     # Higher resolution for aerial imagery
device: 0  # GPU device, use 'cpu' for CPU training
workers: 8
project: runs/train
name: sar_yolov8
exist_ok: true
pretrained: true
optimizer: SGD
verbose: true
seed: 0
deterministic: true
single_cls: false
rect: false
cos_lr: false
close_mosaic: 10
resume: false
amp: true  # Automatic Mixed Precision
fraction: 1.0
profile: false
freeze: null
multi_scale: false
overlap_mask: true
mask_ratio: 4
dropout: 0.0
val: true
split: val
save_json: false
save_hybrid: false
conf: null
iou: 0.7
max_det: 300
half: false
dnn: false
plots: true

# SAR-specific optimizations (enhanced for distance-binned metrics)
sar_config:
  # Distance bins for recall metrics (meters)
  distance_bins:
    - [0, 50]      # Close range
    - [50, 200]    # Medium range
    - [200, 1000]  # Long range
  
  # Class weights for SAR priorities
  class_weights:
    person: 2.0      # Higher weight for person detection
    vehicle: 1.5     # Medium weight for vehicles
    structure: 1.0   # Standard weight for structures
    debris: 1.0      # Standard weight for debris
    dog: 2.0         # High weight for pet detection
    cat: 2.0         # High weight for pet detection
  
  # Evaluation settings
  eval_settings:
    confidence_thresholds: [0.001, 0.01, 0.1, 0.25, 0.5]
    iou_thresholds: [0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95]
    max_detections: [1, 10, 100, 300]
  
  # Performance targets
  performance_targets:
    min_map50: 0.7      # Minimum mAP@0.5
    min_recall: 0.8     # Minimum recall
    max_inference_ms: 50  # Maximum inference time (ms)
    min_fps: 20         # Minimum FPS

# Validation settings
val_config:
  save_txt: true
  save_conf: true
  save_json: true
  plots: true
  
# Export settings for deployment
export_config:
  formats: ['onnx', 'tensorrt']  # Export formats
  optimize: true
  half: true
  dynamic: false
  simplify: true
  opset: 11
  workspace: 4  # TensorRT workspace size (GB)
  nms: true
  
# Callbacks and logging
callbacks:
  tensorboard: true
  wandb: false  # Set to true if using Weights & Biases
  clearml: false
  
logging:
  log_dir: logs/training
  save_period: 10  # Save checkpoint every N epochs
  
# Hardware-specific optimizations
hardware:
  # For Jetson deployment
  jetson:
    batch_size: 8
    imgsz: 416
    half: true
    
  # For high-end GPU training
  gpu_high_end:
    batch_size: 32
    imgsz: 832
    workers: 16
    
  # For CPU training (fallback)
  cpu:
    batch_size: 4
    imgsz: 320
    workers: 4
    amp: false